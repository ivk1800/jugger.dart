// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/injected_method/injected_method_class_which_part_of_component.dart'
    as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent implements _i1.AppComponent {
  JuggerAppComponent.create();

  late final _i2.IProvider<_i1.InjectableClass> _injectableClassProvider =
      _i2.Provider<_i1.InjectableClass>(
          () => _i1.InjectableClass()..init(_stringProvider.get()));

  late final _i2.IProvider<String> _stringProvider =
      _i2.Provider<String>(() => _i1.AppModule.provideString());

  @override
  _i1.InjectableClass getInjectableClass() => _injectableClassProvider.get();
  @override
  void inject(_i1.InjectableClass target) {
    target..init(_stringProvider.get());
  }
}
