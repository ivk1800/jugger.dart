// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/injected_method/injected_method_with_qualifier_parameters.dart'
    as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent implements _i1.AppComponent {
  JuggerAppComponent.create();

  late final _i2.IProvider<int> _intProvider =
      _i2.Provider<int>(() => _i1.AppModule.provideInt1());

  late final _i2.IProvider<_i1.MyClass> _myClassProvider =
      _i2.Provider<_i1.MyClass>(() => const _i1.MyClass()
        ..init(
            _named_28c72d2f94a2b6a72e85353ff4950ceb_intProvider.get(),
            _named_b068931cc450442b63f5b3d276ea4297_intProvider.get(),
            _intProvider.get()));

  late final _i2.IProvider<int>
      _named_28c72d2f94a2b6a72e85353ff4950ceb_intProvider =
      _i2.Provider<int>(() => _i1.AppModule.provideInt2());

  late final _i2.IProvider<int>
      _named_b068931cc450442b63f5b3d276ea4297_intProvider =
      _i2.Provider<int>(() => _i1.AppModule.provideInt3());

  @override
  _i1.MyClass getMyClass() => _myClassProvider.get();
}
