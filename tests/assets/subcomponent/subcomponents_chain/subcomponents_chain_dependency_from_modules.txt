// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/subcomponent/subcomponents_chain/subcomponents_chain_dependency_from_modules.dart'
    as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerComponent1 implements _i1.Component1 {
  JuggerComponent1.create();

  late final _i2.IProvider<_i1.FromComponent1> _fromComponent10Provider =
      _i2.Provider<_i1.FromComponent1>(
          () => _i1.Component1Module.provideClass());

  _i1.Component2 createComponent2() {
    return JuggerSubcomponent$Component2.create(this);
  }
}

class JuggerSubcomponent$Component2 implements _i1.Component2 {
  JuggerSubcomponent$Component2.create(this._parent);

  final JuggerComponent1 _parent;

  late final _i2.IProvider<_i1.FromComponent2> _fromComponent21Provider =
      _i2.Provider<_i1.FromComponent2>(
          () => _i1.Component2Module.provideClass());

  _i1.Component3 createComponent3() {
    return JuggerSubcomponent$Component3.create(this);
  }
}

class JuggerSubcomponent$Component3 implements _i1.Component3 {
  JuggerSubcomponent$Component3.create(this._parent);

  final JuggerSubcomponent$Component2 _parent;

  late final _i2.IProvider<_i1.FromComponent3> _fromComponent32Provider =
      _i2.Provider<_i1.FromComponent3>(() => _i1.Component3Module.provideClass(
            _parent._parent._fromComponent10Provider.get(),
            _parent._fromComponent21Provider.get(),
          ));

  @override
  _i1.FromComponent3 getFromComponent3() => _fromComponent32Provider.get();
}
