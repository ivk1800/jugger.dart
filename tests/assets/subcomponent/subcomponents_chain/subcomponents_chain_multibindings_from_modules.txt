// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/subcomponent/subcomponents_chain/subcomponents_chain_multibindings_from_modules.dart'
    as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerComponent1 implements _i1.Component1 {
  JuggerComponent1.create();

  late final _Set1Component1$Provider _set1Provider =
      _Set1Component1$Provider();

  @override
  Set<_i1.FromComponent> get classes => _set1Provider.get();
  _i1.Component2 createComponent2() {
    return JuggerSubcomponent$Component2.create(this);
  }
}

class JuggerSubcomponent$Component2 implements _i1.Component2 {
  JuggerSubcomponent$Component2.create(this._parent);

  final JuggerComponent1 _parent;

  late final _Set1Component2$Provider _set1Provider =
      _Set1Component2$Provider(this);

  @override
  Set<_i1.FromComponent> get classes => _set1Provider.get();
  _i1.Component3 createComponent3() {
    return JuggerSubcomponent$Component3.create(this);
  }
}

class JuggerSubcomponent$Component3 implements _i1.Component3 {
  JuggerSubcomponent$Component3.create(this._parent);

  final JuggerSubcomponent$Component2 _parent;

  late final _Set1Component3$Provider _set1Provider =
      _Set1Component3$Provider(this);

  @override
  Set<_i1.FromComponent> get classes => _set1Provider.get();
}

class _Set1Component1$Provider
    implements _i2.IProvider<Set<_i1.FromComponent>> {
  late final _i2.IProvider<_i1.FromComponent> _fromComponent0Provider =
      _i2.Provider<_i1.FromComponent>(
          () => _i1.Component1Module.provideClass());

  @override
  Set<_i1.FromComponent> get() =>
      Set.unmodifiable(<_i1.FromComponent>{_fromComponent0Provider.get()});
}

class _Set1Component2$Provider
    implements _i2.IProvider<Set<_i1.FromComponent>> {
  _Set1Component2$Provider(this._component);

  late final _i2.IProvider<_i1.FromComponent> _fromComponent0Provider =
      _component._parent._set1Provider._fromComponent0Provider;

  late final _i2.IProvider<_i1.FromComponent> _fromComponent1Provider =
      _i2.Provider<_i1.FromComponent>(
          () => _i1.Component2Module.provideClass());

  final JuggerSubcomponent$Component2 _component;

  @override
  Set<_i1.FromComponent> get() => Set.unmodifiable(<_i1.FromComponent>{
        _fromComponent0Provider.get(),
        _fromComponent1Provider.get(),
      });
}

class _Set1Component3$Provider
    implements _i2.IProvider<Set<_i1.FromComponent>> {
  _Set1Component3$Provider(this._component);

  late final _i2.IProvider<_i1.FromComponent> _fromComponent0Provider =
      _component._parent._set1Provider._fromComponent0Provider;

  late final _i2.IProvider<_i1.FromComponent> _fromComponent1Provider =
      _component._parent._set1Provider._fromComponent1Provider;

  late final _i2.IProvider<_i1.FromComponent> _fromComponent2Provider =
      _i2.Provider<_i1.FromComponent>(
          () => _i1.Component3Module.provideClass());

  final JuggerSubcomponent$Component3 _component;

  @override
  Set<_i1.FromComponent> get() => Set.unmodifiable(<_i1.FromComponent>{
        _fromComponent0Provider.get(),
        _fromComponent1Provider.get(),
        _fromComponent2Provider.get(),
      });
}
