// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/subcomponent/subcomponent_dependency_from_parent_module.dart'
    as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent implements _i1.AppComponent {
  JuggerAppComponent.create();

  late final _i2.IProvider<String> _string0Provider =
      _i2.SingletonProvider<String>(() => _i1.AppModule.provideString());

  _i1.MyComponent createMyComponent() {
    return JuggerSubcomponent$MyComponent.create(this);
  }
}

class JuggerSubcomponent$MyComponent implements _i1.MyComponent {
  JuggerSubcomponent$MyComponent.create(this._parent);

  final JuggerAppComponent _parent;

  late final _i2.IProvider<int> _int1Provider = _i2.Provider<int>(
      () => _i1.MyModule.provideCount(_parent._string0Provider.get()));

  @override
  int get count => _int1Provider.get();
}
