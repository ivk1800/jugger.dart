// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/non_lazy/non_lazy_simple.dart' as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent implements _i1.AppComponent {
  JuggerAppComponent.create() {
    _initNonLazy();
  }

  late final _i2.IProvider<_i1.LazyRepository> _lazyRepository0Provider =
      _i2.SingletonProvider<_i1.LazyRepository>(
          () => _i1.AppModule.provideLazyRepository());

  late final _i2.IProvider<_i1.NonLazyRepository> _nonLazyRepository1Provider =
      _i2.SingletonProvider<_i1.NonLazyRepository>(
          () => _i1.AppModule.provideNonLazyRepository());

  @override
  _i1.LazyRepository getLazyRepository() => _lazyRepository0Provider.get();
  @override
  _i1.NonLazyRepository getNonLazyRepository() =>
      _nonLazyRepository1Provider.get();
  void _initNonLazy() {
    _nonLazyRepository1Provider.get();
  }
}
