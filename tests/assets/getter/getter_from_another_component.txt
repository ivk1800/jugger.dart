// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/getter/getter_from_another_component.dart' as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent implements _i1.AppComponent {
  JuggerAppComponent.create();

  late final _i2.IProvider<_i1.AppConfig> _appConfigProvider =
      _i2.Provider<_i1.AppConfig>(() => _i1.AppModule.provideAppConfig());

  @override
  _i1.AppConfig get appConfig => _appConfigProvider.get();
}

class JuggerMyScreenComponent implements _i1.MyScreenComponent {
  JuggerMyScreenComponent._create(this._appComponent);

  late final _i2.IProvider<String> _stringProvider =
      _i2.SingletonProvider<String>(
          () => _i1.MyScreenModule.provideScreenName(_appComponent.appConfig));

  final _i1.AppComponent _appComponent;

  @override
  String get screenName => _stringProvider.get();
}

class JuggerMyScreenComponentBuilder implements _i1.MyScreenComponentBuilder {
  _i1.AppComponent? _appComponent;

  @override
  _i1.MyScreenComponentBuilder appComponent(_i1.AppComponent foldersComponent) {
    _appComponent = foldersComponent;
    return this;
  }

  @override
  _i1.MyScreenComponent build() {
    assert(_appComponent != null);
    return JuggerMyScreenComponent._create(_appComponent!);
  }
}
