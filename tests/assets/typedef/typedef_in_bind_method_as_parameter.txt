// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/typedef/typedef_in_bind_method_as_parameter.dart' as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerMyComponent implements _i1.MyComponent {
  JuggerMyComponent.create();

  late final _i2.IProvider<Pattern> _pattern0Provider =
      _i2.Provider<Pattern>(() => _string1Provider.get());

  late final _i2.IProvider<String> _string1Provider =
      _i2.Provider<String>(() => _i1.MyModule.provideMyString());

  @override
  Pattern get myTypedef => _pattern0Provider.get();
}
