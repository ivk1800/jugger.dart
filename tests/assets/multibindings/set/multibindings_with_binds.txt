// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/multibindings/set/multibindings_with_binds.dart' as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent implements _i1.AppComponent {
  JuggerAppComponent.create();

  late final _i2.IProvider<_i1.MyClassImpl1> _myClassImpl13Provider =
      _i2.Provider<_i1.MyClassImpl1>(() => const _i1.MyClassImpl1());

  late final _i2.IProvider<_i1.MyClassImpl2> _myClassImpl24Provider =
      _i2.Provider<_i1.MyClassImpl2>(() => const _i1.MyClassImpl2());

  late final _i2.IProvider<_i1.MyClassImpl3> _myClassImpl35Provider =
      _i2.Provider<_i1.MyClassImpl3>(() => const _i1.MyClassImpl3());

  late final _Set6AppComponent$Provider _set6Provider =
      _Set6AppComponent$Provider(this);

  @override
  Set<_i1.MyClass> get myClasses => _set6Provider.get();
}

class _Set6AppComponent$Provider implements _i2.IProvider<Set<_i1.MyClass>> {
  _Set6AppComponent$Provider(this._component);

  late final _i2.IProvider<_i1.MyClass> _myClass0Provider =
      _i2.Provider<_i1.MyClass>(() => _component._myClassImpl13Provider.get());

  late final _i2.IProvider<_i1.MyClass> _myClass1Provider =
      _i2.Provider<_i1.MyClass>(() => _component._myClassImpl24Provider.get());

  late final _i2.IProvider<_i1.MyClass> _myClass2Provider =
      _i2.SingletonProvider<_i1.MyClass>(
          () => _component._myClassImpl35Provider.get());

  final JuggerAppComponent _component;

  @override
  Set<_i1.MyClass> get() => Set.unmodifiable(<_i1.MyClass>{
        _myClass0Provider.get(),
        _myClass1Provider.get(),
        _myClass2Provider.get(),
      });
}
