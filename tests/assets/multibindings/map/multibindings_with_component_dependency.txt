// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/multibindings/map/multibindings_with_component_dependency.dart'
    as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent implements _i1.AppComponent {
  JuggerAppComponent.create();

  late final _Map1AppComponent$Provider _map1Provider =
      _Map1AppComponent$Provider(this);

  @override
  Map<int, String> get strings => _map1Provider.get();
}

class _Map1AppComponent$Provider implements _i2.IProvider<Map<int, String>> {
  _Map1AppComponent$Provider(this._component);

  late final _i2.IProvider<String> _string2Provider =
      _i2.Provider<String>(() => _i1.Module1.provideString1(_component));

  final JuggerAppComponent _component;

  @override
  Map<int, String> get() =>
      Map.unmodifiable(<int, String>{1: _string2Provider.get()});
}
