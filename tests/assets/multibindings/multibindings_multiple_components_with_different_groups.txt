// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/multibindings/multibindings_multiple_components_with_different_groups.dart'
    as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerAppComponent1 implements _i1.AppComponent1 {
  JuggerAppComponent1.create();

  late final _Set0AppComponent1$Provider _set0Provider =
      _Set0AppComponent1$Provider();

  @override
  Set<String> get strings => _set0Provider.get();
}

class _Set0AppComponent1$Provider implements _i2.IProvider<Set<String>> {
  late final _i2.IProvider<String> _string1Provider =
      _i2.Provider<String>(() => _i1.Module1.provideString1());

  late final _i2.IProvider<String> _string2Provider =
      _i2.Provider<String>(() => _i1.Module1.provideString2());

  @override
  Set<String> get() => Set.unmodifiable(<String>{
        _string1Provider.get(),
        _string2Provider.get(),
      });
}

class JuggerAppComponent2 implements _i1.AppComponent2 {
  JuggerAppComponent2.create();

  late final _Map0AppComponent2$Provider _map0Provider =
      _Map0AppComponent2$Provider();

  @override
  Map<int, String> get strings => _map0Provider.get();
}

class _Map0AppComponent2$Provider implements _i2.IProvider<Map<int, String>> {
  late final _i2.IProvider<String> _string1Provider =
      _i2.Provider<String>(() => _i1.Module2.provideString3());

  late final _i2.IProvider<String> _string2Provider =
      _i2.Provider<String>(() => _i1.Module2.provideString4());

  @override
  Map<int, String> get() => Map.unmodifiable(<int, String>{
        1: _string1Provider.get(),
        2: _string2Provider.get(),
      });
}
