// ignore_for_file: implementation_imports
// ignore_for_file: prefer_const_constructors
// ignore_for_file: always_specify_types
// ignore_for_file: directives_ordering
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: type=lint
// ignore_for_file: unused_field
// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:tests/function/function_type_in_multibindings.dart' as _i1;
import 'package:jugger/jugger.dart' as _i2;

class JuggerMyComponent implements _i1.MyComponent {
  JuggerMyComponent.create();

  late final _Map0MyComponent$Provider _map0Provider =
      _Map0MyComponent$Provider();

  @override
  Map<String, void Function()> get myFunctions => _map0Provider.get();
}

class _Map0MyComponent$Provider
    implements _i2.IProvider<Map<String, void Function()>> {
  late final _i2.IProvider<void Function()> _function1Provider =
      _i2.Provider<void Function()>(() => _i1.MyModule.provideMyFunction1());

  late final _i2.IProvider<void Function()> _function2Provider =
      _i2.Provider<void Function()>(() => _i1.MyModule.provideMyFunction2());

  @override
  Map<String, void Function()> get() =>
      Map.unmodifiable(<String, void Function()>{
        '1': _function1Provider.get(),
        '2': _function2Provider.get(),
      });
}
